---
driver:
  name: docker
  hostname: letsencrypt-formula.example.com

driver_config:
  use_sudo: false
  privileged: true
  provision_command: mkdir -p /run/sshd
  run_command: /lib/systemd/systemd

platforms:
  - name: ubuntu-16.04
  - name: ubuntu-18.04
  - name: debian-9
    driver_config:
      provision_command:
        - apt-get install -y git
  - name: centos-7

provisioner:
  name: salt_solo
  log_level: info
  require_chef: false
  salt_install: bootstrap
  salt_version: latest
  formula: letsencrypt
  salt_copy_filter:
    - .kitchen
    - .git

verifier:
  name: inspec
  sudo: true
  reporter:
    - cli

  state_top:
    base:
      "*":
        - letsencrypt.install

  dependencies:
    - name: apt
      repo: git
      source: https://github.com/saltstack-formulas/apt-formula.git

  pillars:
    top.sls:
      base:
        '*':
          - apt
          - letsencrypt
    apt.sls:
      apt:
        repositories:
          #####
          letsencrypt-backports:
            distro: stretch-backports
            url: http://deb.debian.org/debian
            comps: [main]
        preferences:
          letsencrypt-backports:
            pin: release a=stretch-backports
            priority: 640
    letsencrypt.sls:
      letsencrypt:
        use_package: true
        config: |
          server: https://acme-staging.api.letsencrypt.org/directory
          email: saltstack-letsencrypt-formula@example.com
          authenticator: webroot
          webroot-path: /var/www/html
          agree-tos: true
          renew-by-default: true


verifier:
  name: inspec
  sudo: true
  reporter:
    - cli

suites:
  # git install
  - name: git
    excludes:
      - debian-9
    verifier:
      inspec_tests:
        - test/integration/git
    provisioner:
      state_top:
        base:
          '*':
            - letsencrypt.install
            - letsencrypt.config
#            - letsencrypt.domains # Please note that you have to add a valide domain name and a valid email to tests this
                                  # if you leave this as it is, the state failes
      pillars:
        top.sls:
          base:
            '*':
              - letsencrypt
        letsencrypt.sls:
          letsencrypt:
            use_package: false
            version: 0.26.x
            config: |
              server = https://acme-staging.api.letsencrypt.org/directory
              email = saltstack-letsencrypt-formula@example.com
              authenticator = standalone
              agree-tos = True
              renew-by-default = True
            domainsets:
              www:
                - letsencrypt-formula.example.com
  - name: deb
    excludes:
      - centos-7
      - ubuntu-16.04
      - ubuntu-18.04
    verifier:
      inspec_tests:
        - test/integration/deb
    provisioner:
      dependencies:
        - name: apt
          repo: git
          source: https://github.com/saltstack-formulas/apt-formula.git
      state_top:
        base:
          "*":
            - apt.repositories
            - apt.preferences
            - apt.update
            - letsencrypt.install
            - letsencrypt.config
#            - letsencrypt.domains # Please note that you have to add a valide domain name and a valid email to tests this
                                  # if you leave this as it is, the state fails
      pillars:
        top.sls:
          base:
            '*':
              - apt
              - letsencrypt
        apt.sls:
          apt:
            repositories:
              #####
              letsencrypt-backports:
                distro: stretch-backports
                url: http://deb.debian.org/debian
                comps: [main]
            preferences:
              letsencrypt-backports:
                pin: release a=stretch-backports
                priority: 640
        # epel.sls:
        #  epel:
        #    disabled: false
        letsencrypt.sls:
          letsencrypt:
            use_package: true
            config: |
              server = https://acme-staging.api.letsencrypt.org/directory
              email = saltstack-letsencrypt-formula@example.com
              authenticator = webroot
              webroot-path = /var/www/html
              agree-tos = true
              renew-by-default = true
            domainsets:
              www:
                - letsencrypt-formula.example.com

  - name: rpm
    excludes:
      - debian-9
      - ubuntu-16.04
      - ubuntu-18.04
    verifier:
      inspec_tests:
        - test/integration/rpm
    provisioner:
      state_top:
        base:
          '*':
            - letsencrypt.install
            - letsencrypt.config
#            - letsencrypt.domains # Please note that you have to add a valide domain name and a valid email to tests this
                                  # if you leave this as it is, the state fails
      pillars:
        top.sls:
          base:
            '*':
              - letsencrypt
        letsencrypt.sls:
          letsencrypt:
            use_package: true
            config: |
              server = https://acme-staging.api.letsencrypt.org/directory
              email = saltstack-letsencrypt-formula@example.com
              authenticator = webroot
              webroot-path = /var/www/html
              agree-tos = true
              renew-by-default = true
            domainsets:
              www:
                - letsencrypt-formula.example.com